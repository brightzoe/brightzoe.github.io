"use strict";(self.webpackChunkbrightzoe_blog=self.webpackChunkbrightzoe_blog||[]).push([[79],{2142:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var l=t(1527),s=t(8672);const r={},i="\u94fe\u8868\u95ee\u9898",d={id:"algorithm/list-problem",title:"\u94fe\u8868\u95ee\u9898",description:"\u94fe\u8868\u95ee\u9898\u4e3b\u8981\u5206\u4e3a\u4e09\u7c7b\uff1a",source:"@site/docs/algorithm/list-problem.md",sourceDirName:"algorithm",slug:"/algorithm/list-problem",permalink:"/docs/algorithm/list-problem",draft:!1,unlisted:!1,editUrl:"https://github.com/brightzoe/brightzoe.github.io/edit/main/docs/algorithm/list-problem.md",tags:[],version:"current",lastUpdatedAt:1711102892,formattedLastUpdatedAt:"2024\u5e743\u670822\u65e5",frontMatter:{},sidebar:"DataStructure",previous:{title:"\u4e8c\u53c9\u6811\u7684\u904d\u5386",permalink:"/docs/algorithm/traverse-of-tree"}},o={},c=[{value:"\u5220\u9664\u8282\u70b9",id:"\u5220\u9664\u8282\u70b9",level:2}];function u(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{id:"\u94fe\u8868\u95ee\u9898",children:"\u94fe\u8868\u95ee\u9898"}),"\n",(0,l.jsx)(e.p,{children:"\u94fe\u8868\u95ee\u9898\u4e3b\u8981\u5206\u4e3a\u4e09\u7c7b\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u94fe\u8868\u7684\u5904\u7406\uff1a\u94fe\u8868\u5408\u5e76/\u5220\u9664"}),"\n",(0,l.jsx)(e.li,{children:"\u94fe\u8868\u53cd\u8f6c"}),"\n",(0,l.jsx)(e.li,{children:"\u73af\u5f62\u94fe\u8868"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"https://leetcode.cn/problems/merge-two-sorted-lists/",children:"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 - \u529b\u6263\uff08LeetCode\uff09"}),"\u2b50\u2b50\u2728"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\u94fe\u8868\u5904\u7406\u7c7b\u95ee\u9898\u3002\u4e2d\u5fc3\u601d\u60f3\uff1a",(0,l.jsx)(e.strong,{children:"\u5904\u7406\u94fe\u8868\u8282\u70b9\u95f4\u7684\u6307\u9488\u5173\u7cfb"}),"\u3002"]}),"\n",(0,l.jsx)(e.li,{children:"\u6dfb\u52a0\u524d\u7f6edummy\u8282\u70b9\uff0c\u65b9\u4fbf\u6307\u9488\u6307\u5411\u3002"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"// \u5904\u7406\u6307\u9488\u7684\u5173\u7cfb\nclass ListNode {\n  val: number\n  next: ListNode | null\n  constructor(val?: number, next?: ListNode | null) {\n      this.val = (val === undefined ? 0 : val)\n      this.next = (next === undefined ? null : next)\n  }\n}\n\nfunction mergeTwoLists(list1: ListNode | null, list2: ListNode | null): ListNode | null {\n    const res: ListNode = new ListNode()\n    let curr = res\n    while (list1 && list2) {\n        if (list1.val < list2.val) {\n            curr.next = list1\n            list1 = list1.next\n        } else {\n            curr.next = list2\n            list2 = list2.next\n        }\n        curr = curr.next\n    }\n\n    curr.next = list1 || list2\n    return res.next\n"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"// \u9012\u5f52\u5b9e\u73b0\u2b50\u2b50\u2b50\nfunction mergeTwoLists(\n  list1: ListNode | null,\n  list2: ListNode | null,\n): ListNode | null {\n  if (!list1) return list2;\n  if (!list2) return list1;\n  if (list1.val < list2.val) {\n    list1.next = mergeTwoLists(list1.next, list2);\n    return list1;\n  } else {\n    list2.next = mergeTwoLists(list2.next, list1);\n    return list2;\n  }\n}\n"})}),"\n",(0,l.jsx)(e.h2,{id:"\u5220\u9664\u8282\u70b9",children:"\u5220\u9664\u8282\u70b9"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"https://leetcode.cn/problems/remove-duplicates-from-sorted-list/description/",children:"83. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 - \u529b\u6263\uff08LeetCode\uff09"})," \u2b50\u2b50\u2728"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"function deleteDuplicates(head: ListNode | null): ListNode | null {\n  let node = head;\n  while (node && node.next) {\n    // \u5f53\u524d\u8282\u70b9\u548c\u4e0b\u4e2a\u8282\u70b9\u76f8\u540c\uff0c\u8df3\u8fc7\u4e0b\u4e2a\u8282\u70b9\n    if (node.val === node.next.val) {\n      node.next = node.next.next;\n    } else {\n      node = node.next;\n    }\n  }\n  return head;\n}\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.a,{href:"https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/description/",children:"82. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 II - \u529b\u6263\uff08LeetCode\uff09"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\u524d\u4e00\u9898\u7684\u5ef6\u7533\u3002\u6dfb\u52a0",(0,l.jsx)(e.strong,{children:"\u524d\u7f6edummy\u8282\u70b9"}),"\uff0c\u65b9\u4fbf\u6307\u9488\u6307\u5411\u3002"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"function deleteDuplicates(head: ListNode | null): ListNode | null {\n  // head \u524d\u9762\u518d\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\n  const dummy = new ListNode(undefined, head);\n  let curr = dummy;\n  while (curr.next && curr.next.next) {\n    if (curr.next.val === curr.next.next.val) {\n      // \u4e0d\u6b622\u4e2a\u76f8\u540c\u7684\u503c\uff0c\u505a\u4e2a\u8bb0\u5f55\u90fd\u8df3\u8fc7\n      const val = curr.next.val;\n      while (curr.next && curr.next.val === val) {\n        curr.next = curr.next.next;\n      }\n    } else {\n      curr = curr.next;\n    }\n  }\n  // \u94fe\u8868\u8d77\u59cb\u7684\u8282\u70b9\n  return dummy.next;\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"https://leetcode.cn/problems/remove-nth-node-from-end-of-list/",children:"19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9 - \u529b\u6263\uff08LeetCode\uff09"}),"\u2b50\u2b50\u2b50"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u4e24\u904d\u626b\u63cf\uff0c\u5148\u8ba1\u7b97list.length\u3002\u7136\u540e\u5c06\u5012\u6570\u8f6c\u6362\u4e3a\u6b63\u6570\u3002\u9700\u8981\u4e24\u904d\u904d\u5386"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"function removeNthFrontNode(head: ListNode, n: number): ListNode | null {\n  let length = 1;\n  let curr = head;\n  // \u5148\u8ba1\u6570\u7b97list.length\n  while (curr.next) {\n    length++;\n    curr = curr.next;\n  }\n  // \u5012\u6570\u7b2cn\u4e2a\uff0c\u5c31\u662f\u6b63\u6570 len-n+1 \u4e2a\n  let dummy = new ListNode(0, head);\n  //  \u6307\u9488\u6307\u5411\u8981\u5220\u9664\u7684\u8282\u70b9\u524d\u9762\u4e00\u4e2a\u8282\u70b9\n  let tmp = length - n;\n  let node = dummy;\n  while (tmp > 0 && node.next) {\n    node = node.next;\n    tmp--;\n  }\n  node.next = node.next.next;\n  return dummy.next;\n}\n"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u53cc\u6307\u9488\u4e2d\u7684\u5feb\u6162\u6307\u9488\uff0c\u4e00\u904d\u626b\u63cf\u5373\u53ef\u3002"}),"\n"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"\u5feb\u6162\u6307\u9488\u3002\u5feb\u6307\u9488\u5148\u8dd1n\u6b65\uff0c\u7136\u540e\u5feb\u6162\u6307\u9488\u540c\u65f6\u8dd1\uff0c\u5f53\u5feb\u6307\u9488\u8d70\u5230\u672b\u5c3e\u65f6\uff0c\u6162\u6307\u9488\u6307\u5411\u5012\u6570\u7b2cn\u4e2a\u7ed3\u70b9\u3002"}),"\n",(0,l.jsx)(e.li,{children:"\u4f46\u662f\u6307\u9488\u8981\u6307\u5411\u8981\u5220\u9664\u7684\u8282\u70b9\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u5220\u9664\u7684\u662fhead\u8282\u70b9\u6ca1\u529e\u6cd5\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u4f7f\u7528dummy\u8282\u70b9\u3002"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"function removeNthFromEnd(head: ListNode | null, n: number): ListNode | null {\n  let dummy = new ListNode(0, head);\n  let fast = dummy;\n  let slow = dummy;\n  while (n > 0) {\n    fast = fast.next;\n    n--;\n  }\n  while (fast.next) {\n    fast = fast.next;\n    slow = slow.next;\n  }\n  slow.next = slow.next.next;\n  return dummy.next;\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"https://leetcode.cn/problems/reverse-linked-list",children:"206. \u53cd\u8f6c\u94fe\u8868 - \u529b\u6263\uff08LeetCode\uff09"}),"\u2b50\u2b50\u2b50"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u5b9e\u73b0\u3002"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"// \u9012\u5f52\nfunction reverseList(head: ListNode): ListNode {\n  if (head && head.next) {\n    const newHead = reverseList(head.next);\n    head.next.next = head;\n    head.next = null;\n    return newHead;\n  } else {\n    return head;\n  }\n}\n"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u5b9e\u73b0\u3002\u5c06\u6bcf\u4e2a\u6307\u9488\u90fd\u53cd\u8f6c\u3002\u4e09\u4e2a\u6307\u9488\uff0ccurr,pre,next\u3002"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"function reverseList(head: ListNode): ListNode {\n  let pre = null;\n  let curr = head;\n  while (curr) {\n    const next = curr.next;\n    curr.next = pre;\n    pre = curr;\n    curr = next;\n  }\n  return pre;\n}\nconst three = new ListNode(3);\nconst two = new ListNode(2, three);\nconst one = new ListNode(1, two);\n"})})]})}function a(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(u,{...n})}):u(n)}},8672:(n,e,t)=>{t.d(e,{Z:()=>d,a:()=>i});var l=t(959);const s={},r=l.createContext(s);function i(n){const e=l.useContext(r);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),l.createElement(r.Provider,{value:e},n.children)}}}]);