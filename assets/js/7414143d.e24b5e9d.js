"use strict";(globalThis.webpackChunkbrightzoe_blog=globalThis.webpackChunkbrightzoe_blog||[]).push([[243],{1385:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var s=n(9474);const l={},o=s.createContext(l);function c(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),s.createElement(o.Provider,{value:t},e.children)}},8935:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>a,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var s=n(9961),l=n(3274),o=n(1385);const c={title:"\u5b66\u4e60 The Little Schemer",authors:["zoe"],tags:["reading","dev","fp"]},i=void 0,r={authorsImageUrls:[void 0]},d=[{value:"\u57fa\u672c\u8bed\u6cd5",id:"\u57fa\u672c\u8bed\u6cd5",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(t.p,{children:["\u73af\u5883\u914d\u7f6e\u4f7f\u7528 VS Code \u7f16\u5199 scheme ,\u53c2\u8003: ",(0,l.jsx)(t.a,{href:"https://zhuanlan.zhihu.com/p/405246479",children:"Windows + VS Code \u642d\u5efa Scheme \u5f00\u53d1\u73af\u5883 - \u77e5\u4e4e"})]}),"\n",(0,l.jsx)(t.h2,{id:"\u57fa\u672c\u8bed\u6cd5",children:"\u57fa\u672c\u8bed\u6cd5"}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"atom"}),": \u5143\u5b50 ",(0,l.jsx)(t.code,{children:"atom"})]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"list"}),": \u5217\u8868 ",(0,l.jsx)(t.code,{children:"(atom ss)"})," ",(0,l.jsx)(t.code,{children:"()"})]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"car"}),": list \u91cc\u7684\u7b2c\u4e00\u4e2a \u5143\u7d20 ",(0,l.jsx)(t.code,{children:"(car l)"})]}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsx)(t.p,{children:"The primitive car is definedonly for non-empty lists."}),"\n"]}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsx)(t.p,{children:'( car l) is another way to ask for "the car of the list l."'}),"\n"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"cdr"}),": list \u53bb\u6389 car \u540e\u7684 \u65b0 list ",(0,l.jsx)(t.code,{children:"cdr l"})]}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsx)(t.p,{children:'( cdr l) is just another way to ask for "the cdr of the list l."'}),"\n"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"car"}),": ",(0,l.jsx)(t.code,{children:"cdr"}),"\u90fd\u662f\u9488\u5bf9\u975e\u7a7a ",(0,l.jsx)(t.code,{children:"list"}),",\u4e0d\u80fd\u7528\u4e8e",(0,l.jsx)(t.code,{children:"atom"}),",\u7a7a",(0,l.jsx)(t.code,{children:"list"})]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"cons"}),": \u628a \u4e00\u4e2a Scheme expression \u6dfb\u52a0\u4e3a",(0,l.jsx)(t.code,{children:"list"}),"\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20. ",(0,l.jsx)(t.code,{children:"(cons a l)"})," \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e00\u5b9a\u662f",(0,l.jsx)(t.code,{children:"list"}),"."]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"(null? l)"}),": \u662f\u7a7a",(0,l.jsx)(t.code,{children:"list"}),"\u5417? ",(0,l.jsx)(t.code,{children:"(quote ())"}),"\u8868\u793a\u4e00\u4e2a\u7a7a list,null list. ",(0,l.jsx)(t.code,{children:" ( null? (quote ()))"})," => true"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"( atom? s )"})," \u662f",(0,l.jsx)(t.code,{children:"atom"}),"\u5417?"]}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"( eq? a1 a2)"})," \u8fd9\u4e24\u4e2a",(0,l.jsx)(t.code,{children:"atom"}),"\u76f8\u7b49\u5417? Eq takes two arguments. Both of them must be non-numeric atoms."]}),"\n",(0,l.jsxs)(t.p,{children:["----------------\u7b2c\u4e00\u7ae0 end ",(0,l.jsx)(t.code,{children:"(lat? l)"})," \u662f\u5168\u4e3a",(0,l.jsx)(t.code,{children:"atom"}),"\u7684",(0,l.jsx)(t.code,{children:"list"}),"\u5417? Every lat is a list of atoms."]})]})}function a(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},9961:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021/11/05/the-little-schemer","editUrl":"https://github.com/brightzoe/brightzoe.github.io/edit/main/blog/2021-11-05-the-little-schemer.md","source":"@site/blog/2021-11-05-the-little-schemer.md","title":"\u5b66\u4e60 The Little Schemer","description":"\u73af\u5883\u914d\u7f6e\u4f7f\u7528 VS Code \u7f16\u5199 scheme ,\u53c2\u8003: Windows + VS Code \u642d\u5efa Scheme \u5f00\u53d1\u73af\u5883 - \u77e5\u4e4e","date":"2021-11-05T00:00:00.000Z","tags":[{"inline":true,"label":"reading","permalink":"/blog/tags/reading"},{"inline":true,"label":"dev","permalink":"/blog/tags/dev"},{"inline":true,"label":"fp","permalink":"/blog/tags/fp"}],"readingTime":0.9,"hasTruncateMarker":false,"authors":[{"name":"brightzoe","url":"https://github.com/brightzoe","imageURL":"https://github.com/brightzoe.png","key":"zoe","page":null}],"frontMatter":{"title":"\u5b66\u4e60 The Little Schemer","authors":["zoe"],"tags":["reading","dev","fp"]},"unlisted":false,"prevItem":{"title":"\u4e3a\u535a\u5ba2\u6dfb\u52a0\u8bc4\u8bba\u529f\u80fd","permalink":"/blog/2022/06/07/add-comment-system-on-blog"},"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}}')}}]);